{"mappings":"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","sources":["src/library.js"],"sourcesContent":["import './js/scroll-to-top';\nimport ThemeSwitcher from './js/theme-switcher';\nimport StorageListApi from './js/api/storageListApi';\nimport MovieApi from \"./js/api/movieApi\";\nimport makePagination from \"./js/pagination\";\nimport cardsHbs from './templates/cards.hbs';\nimport MovieModal from './js/modals/MovieModal';\nimport TeamModal from './js/modals/TeamModal';\nimport { teamMembers } from \"./js/team-data\";\n\nconst LIBRARY_MODE_KEY = 'library_mode';\nconst WATCHED_PAGE_KEY = 'watched_page';\nconst QUEUE_PAGE_KEY = 'queue_page';\nconst WATCHED = 'watched';\nconst QUEUE = 'queue';\n\nconst ts = new ThemeSwitcher('#slider');\n\n// document.querySelectorAll(\".modal\").forEach(el => el.style.display = 'none');\n\nconst queueList = new StorageListApi('queue');\nconst watchedList = new StorageListApi('watched');\n\nconst refs = {\n  watchedBtn: document.querySelector('header [data-action=\"watched\"]'),\n  queueBtn: document.querySelector('header [data-action=\"queue\"]'),\n  cardsUl: document.querySelector(\".gallery__list\"),\n  pagination: document.querySelector(\".gallery__pagination\"),\n  teamLink: document.querySelector(\".open-team-modal\"),\n}\n\nrefs.teamLink.addEventListener('click', evt => {\n  evt.preventDefault();\n  const teamModal = new TeamModal(teamMembers);\n  teamModal.show();\n});\n\nrefs.watchedBtn.closest('UL').addEventListener('click', evt => {\n  const el = evt.target;\n  const action = el.dataset.action;\n  if (action)\n    updateBtnsState(action);\n});\n\nlet movieModal;\n\nfunction onMovieModalClose() {\n  if (movieModal)\n    movieModal = null;\n}\n\nfunction updateCurrentList() {\n  console.log('updateCurrentList');\n  let page = gMode === WATCHED\n    ? sessionStorage.getItem(WATCHED_PAGE_KEY) || 1\n    : sessionStorage.getItem(QUEUE_PAGE_KEY) || 1;\n  page = Math.min(page, gMode === WATCHED ? watchedList.getTotalPages() : queueList.getTotalPages());\n  console.log(page, watchedList.getList(), queueList.getList());\n  gotoPage(page);\n}\n\nrefs.cardsUl.addEventListener('click', evt => {\n  evt.preventDefault();\n  const card = evt.target.closest('LI');\n  if (!card)\n    return;\n  // if (queueList.inList(card.dataset.id))\n  //   queueList.removeFromList(card.dataset.id);\n  movieModal = new MovieModal(gMode === 'watched' ? watchedList.getItemById(card.dataset.id) : queueList.getItemById(card.dataset.id), {\n    onClose: onMovieModalClose, onChange: (whatChanged) => {\n      // console.dir(queueList)\n      if (whatChanged === gMode)\n        updateCurrentList();\n    }\n  });\n  movieModal.show();\n})\n\nrefs.pagination.addEventListener('click', async evt => {\n  if (evt.target.classList.contains('gallery__pag-button--current')) {\n    if (evt.target.dataset.pages === \"1\") return;\n    const formMarkup = `<form style=\"\"><input type=\"number\" name=\"page\" max=\"${evt.target.dataset.pages}\" min=\"1\" value=\"${evt.target.textContent}\" style=\"width:100%; height:100%\"></form>`;\n    evt.target.innerHTML = formMarkup;\n    const form = evt.target.querySelector(\"form\");\n    form.elements.page.focus();\n    form.elements.page.select()\n    form.addEventListener('submit', async e => {\n      e.preventDefault();\n      gotoPage(e.target.elements.page.value);\n      evt.target.textContent = evt.target.dataset.curpage;\n    }, { once: true })\n    form.elements.page.addEventListener('blur', e => {\n      form.remove();\n      evt.target.textContent = evt.target.dataset.curpage;\n    }, { once: true })\n    return;\n  }\n  const page = evt.target.dataset.page;\n  if (page) {\n    gotoPage(page);\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  }\n});\n\nlet gMode = sessionStorage.getItem(LIBRARY_MODE_KEY);\nif (!gMode) gMode = WATCHED;\nupdateBtnsState(gMode);\n\nfunction updateBtnsState(mode) {\n  gMode = mode;\n  sessionStorage.setItem(LIBRARY_MODE_KEY, mode);\n  let page;\n  switch (mode) {\n    case (WATCHED):\n      refs.watchedBtn.classList.add('is-active');\n      refs.queueBtn.classList.remove('is-active');\n      page = sessionStorage.getItem(WATCHED_PAGE_KEY) || 1;\n      break;\n    case (QUEUE):\n      refs.watchedBtn.classList.remove('is-active');\n      refs.queueBtn.classList.add('is-active');\n      page = sessionStorage.getItem(QUEUE_PAGE_KEY) || 1;\n      break;\n    default: return;\n  }\n  gotoPage(page);\n}\n\nfunction renderCards(data) {\n  refs.cardsUl.innerHTML = data\n    ? cardsHbs({ results: data.results, base_path: MovieApi.IMAGES_BASE_URL, showRating: 1 })\n    : `<li class=\"gallery__no-entries\">There are no entries in the ${gMode} list yet</li>`; //makeCardsMarkup(data);\n  refs.pagination.innerHTML = data ? makePagination(data) : '';\n}\n\nfunction gotoPage(page) {\n  // console.log(page)\n  let data;\n  switch (gMode) {\n    case WATCHED:\n      data = watchedList.fetchNext(page);\n      if (data)\n        sessionStorage.setItem(WATCHED_PAGE_KEY, data.page);\n      break;\n    case QUEUE:\n      data = queueList.fetchNext(page);\n      if (data)\n        sessionStorage.setItem(QUEUE_PAGE_KEY, data.page);\n      break;\n    default: return;\n  }\n  renderCards(data);\n}\n\naddEventListener('storage', (evt) => {\n  if (evt.key === WATCHED || evt.key === QUEUE) {\n    if (movieModal)\n      movieModal.updateButtonsState();\n    updateCurrentList();\n  }\n});"],"names":["parcelRequire","$brr8Z","default","$ce3726a01b8ab25a$var$queueList","$9N7Qa","$ce3726a01b8ab25a$var$watchedList","$ce3726a01b8ab25a$var$refs","watchedBtn","document","querySelector","queueBtn","cardsUl","pagination","teamLink","$ce3726a01b8ab25a$var$movieModal","$ce3726a01b8ab25a$var$onMovieModalClose","$ce3726a01b8ab25a$var$updateCurrentList","console","log","page","$ce3726a01b8ab25a$var$gMode","sessionStorage","getItem","Math","min","getTotalPages","getList","$ce3726a01b8ab25a$var$gotoPage","addEventListener","evt","preventDefault","$9BQbI","$dLF68","teamMembers","show","closest","action","target","dataset","$ce3726a01b8ab25a$var$updateBtnsState","card","$7JPzN","getItemById","id","onClose","onChange","whatChanged","async","classList","contains","pages","formMarkup","textContent","innerHTML","form","elements","focus","select","e","value","curpage","once","remove","window","scrollTo","top","behavior","mode","setItem","add","data","fetchNext","$44W7Q","results","base_path","$5gHzC","IMAGES_BASE_URL","showRating","$2nhTy","$ce3726a01b8ab25a$var$renderCards","key","updateButtonsState"],"version":3,"file":"library.03a6ecd2.js.map"}